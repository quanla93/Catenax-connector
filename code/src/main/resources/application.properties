#postgresql.database.db = d2050
#postgresql.database.user = postgres
#postgresql.database.pw = password
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:8109/CatenaX
#spring.datasource.username=postgres
#spring.datasource.password=password
#spring.jpa.database=POSTGRESQL
#spring.jpa.show-sql=false
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.jpa.properties.javax.persistence.create-database-schemas=true
#spring.jackson.deserialization.fail-on-unknown-properties=true
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata


spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false
spring.jpa.properties.javax.persistence.create-database-schemas=true
spring.jackson.deserialization.fail-on-unknown-properties=true

server.port=8080

sokrates.consumer.controlplane.url.contractoffer=http://sokrates-edc-controlplane:30902/data/catalog?providerUrl=
sokrates.consumer.controlplane.url.offerrespornid=http://sokrates-edc-controlplane:30902/data/contractnegotiations
sokrates.consumer.controlplane.url.contractnegotiationid=http://sokrates-edc-controlplane:30902/data/contractnegotiations/
sokrates.consumer.controlplane.url.InitiateTransfer=http://sokrates-edc-controlplane:30902/data/transferprocess